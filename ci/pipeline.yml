---
resources:
- name: git-sandbox-bot
  type: git
  source:
    uri: https://github.com/cloud-gov/cg-sandbox-bot
    branch: main
    commit_verification_keys: ((cloud-gov-pgp-keys))

- name: dotgov-domain-data
  type: git
  source:
    uri: https://github.com/cisagov/dotgov-data
    branch: main

- name: slack
  type: slack-notification
  source:
    url: ((slack-webhook-url))

- name: sandbox-bot-stage-deployment
  type: cf
  source:
    api: ((staging-cf-api-url))
    username: ((cf-staging-user.username))
    password: ((cf-staging-user.password))
    organization: ((cf-organization))
    space: ((cf-space))
    skip_cert_check: false

- name: sandbox-bot-prod-deployment
  type: cf
  source:
    api: ((prod-cf-api-url))
    username: ((cf-production-user.username))
    password: ((cf-production-user.password))
    organization: ((cf-organization))
    space: ((cf-space))
    skip_cert_check: false


resource_types:
- name: registry-image
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: registry-image-resource
    aws_region: us-gov-west-1
    tag: latest
    
- name: slack-notification
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: slack-notification-resource
    aws_region: us-gov-west-1
    tag: latest


- name: git
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: git-resource
    aws_region: us-gov-west-1
    tag: latest

- name: cf
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: cf-resource
    aws_region: us-gov-west-1
    tag: latest

jobs:
- name: set-self
  plan:
  - in_parallel:
    - get: git-sandbox-bot
      trigger: true
      params: {depth: 1}
  - set_pipeline: self
    file: git-sandbox-bot/ci/pipeline.yml
    var_files: [git-sandbox-bot/ci/config.yml]

- name: deploy-sandbox-bot-stage
  serial: true
  serial_groups:
  - sandbox-bot
  plan:
  - in_parallel:
    - get: git-sandbox-bot
      trigger: true
      passed: [set-self]
    - get: dotgov-domain-data
      trigger: true
  - task: integrate
    file: git-sandbox-bot/integrate.yml
  - put: sandbox-bot-stage-deployment
    params:
      manifest: git-sandbox-bot-integrated/manifest.yml
      path: git-sandbox-bot-integrated
      current_app_name: sandbox-bot-staging
      environment_variables:
        DOMAIN_NAME: ((cf-domain-name-staging))
        CLIENT_ID: sandbox-bot
        CLIENT_SECRET: ((cf-staging-uaa-client.password))
        UAA_URL: ((uaa-url-staging))
        DOMAIN_CSV_PATH: ./current-federal.csv
        SLACK_HOOK: ((slack-webhook-url))
        DO_SLACK: "false"
  on_failure: &slack-failure-params
    put: slack
    params:
      text: |
        :x: FAILED to deploy $BUILD_PIPELINE_NAME on ((staging-cf-api-url))
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-failure-channel))
      username: ((slack-user.username))
      icon_url: ((slack-icon-url))
  on_success: &slack-success-params
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed $BUILD_PIPELINE_NAME on ((staging-cf-api-url))
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-success-channel))
      username: ((slack-user.username))
      icon_url: ((slack-icon-url))


- name: run-sandbox-bot-stage-acceptance-tests
  serial: true
  serial_groups:
  - sandbox-bot
  plan:
  - in_parallel:
    - get: git-sandbox-bot
      passed: [deploy-sandbox-bot-stage]
      trigger: true
  - task: sandbox-bot-stage-acceptance-tests
    file: git-sandbox-bot/ci/staging-acceptance-tests.yml
    params:
      CF_API: ((cf-api-staging))
      CF_ADMIN_USER: ((admin-user-staging))
      CF_ADMIN_PASSWORD: ((admin-password-staging))
  on_failure:
    put: slack
    params:
      <<: *slack-failure-params
      text: |
        :x: FAILED to run staging acceptance tests $BUILD_PIPELINE_NAME on ((staging-cf-api-url))
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
 


- name: deploy-sandbox-bot-prod
  serial: true
  serial_groups:
  - sandbox-bot
  plan:
  - in_parallel:
    - get: git-sandbox-bot
      passed: [deploy-sandbox-bot-stage, run-sandbox-bot-stage-acceptance-tests]
      trigger: true
    - get: dotgov-domain-data
      trigger: true
    - get: sandbox-bot-stage-deployment
      passed: [deploy-sandbox-bot-stage]
  - task: integrate
    file: git-sandbox-bot/integrate.yml
  - put: sandbox-bot-prod-deployment
    params:
      manifest: git-sandbox-bot-integrated/manifest.yml
      path: git-sandbox-bot-integrated
      current_app_name: sandbox-bot
      environment_variables:
        DOMAIN_NAME: ((cf-domain-name-production))
        CLIENT_ID: sandbox-bot
        CLIENT_SECRET: ((cf-production-uaa-client.password))
        UAA_URL: ((uaa-url-production))
        DOMAIN_CSV_PATH: ./current-federal.csv
        SLACK_HOOK: ((slack-webhook-url))
        DO_SLACK: "true"
  on_failure:
    put: slack
    params:
      <<: *slack-failure-params
      text: |
        :x: FAILED to deploy $BUILD_PIPELINE_NAME on ((prod-cf-api-url))
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-success-params
      text: |
        :white_check_mark: Successfully deployed $BUILD_PIPELINE_NAME on ((prod-cf-api-url))
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
